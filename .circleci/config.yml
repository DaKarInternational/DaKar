# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    machine: true
#      image: circleci/classic:latest
      
#    docker:
#      - image: circleci/openjdk:8-jdk
#      - image: dakarinternational/couch-test:latest
        
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
#      - setup_remote_docker
#      - run: |
#          ulimit -c unlimited
#          ./dump
      #           tell the operating system to remove the file size limit on core dump files 

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      #      - run:
      #          name: run test db
      #          command: |
      #            docker-compose pull couchtest
      #            docker-compose up -d couchtest
      #            sleep 10
      #            curl -X PUT --data "name=John Smith&roles=cluster_admin&password=password" -H "Content-Type: application/x-www-form-urlencoded" http://Administrator:password@127.0.0.1:8091/settings/rbac/users/local/test
      #            docker-compose logs -f couchtest
      - run:
          name: maven stuff
          command: |
            sleep 50
            mvn install -DcreateChecksum=true source:jar javadoc:jar -e
            cp ./.circleci/settings.xml ~/.m2 
            mvn -DskipTests deploy
            mvn dockerfile:build dockerfile:push
      - add_ssh_keys:
          fingerprints:
            - "32:e4:94:57:e8:e3:04:a1:65:a7:a7:49:a7:e2:e8:56"


  build-and-push-testdb:
    docker:
      - image: circleci/openjdk:8-jdk
    requires:
      - hold
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and push
          command: |
            docker login -p $DOCKER_PWD -u $DOCKER_USR
            docker-compose build couchtest
            docker-compose push couchtest
            

  run-test-db:
    docker:
      - image: dakarinternational/couch-test:latest
    steps:
      - run:
          name: logs
          command: |
            tail -f /opt/couchbase/var/lib/couchbase/logs
#            ps auxef | grep -i couchbase
#            sleep 50
#            curl -X PUT --data "name=John Smith&roles=cluster_admin&password=password" -H "Content-Type: application/x-www-form-urlencoded" http://Administrator:password@127.0.0.1:8091/settings/rbac/users/local/test

  run-test-db-manu:
    docker:
      - image: circleci/openjdk:8-jdk
    requires:
      - hold
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: pull and run
          command: |
            docker-compose pull couchtest
            docker-compose up -d couchtest
            sleep 30
            docker-compose logs couchtest
            curl -X PUT --data "name=John Smith&roles=cluster_admin&password=password" -H "Content-Type: application/x-www-form-urlencoded" http://Administrator:password@127.0.0.1:8091/settings/rbac/users/local/test



workflows:
  version: 2
  
  run-testdb:
    jobs:
      - hold:
          type: approval
      - run-test-db:
          requires:
            - hold
          
  just-build:
    jobs:
      - run-test-db
      - build
      
  build-deploy-and-push:
    jobs:
      - hold: 
          type: approval 
      - build-and-push-testdb:
          requires:
            - hold
      - build:
          requires:
            - build-and-push-testdb
          filters:
            branches:
              only: features/circleci

