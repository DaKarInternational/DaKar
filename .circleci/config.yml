# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      - image: dakarinternational/couch-test:latest

#      - run: |
#           tell the operating system to remove the file size limit on core dump files 
#          ulimit -c unlimited
#          ./dump

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests
#      - setup_remote_docker
      - run:
          name: run_tests
          command: |
            mvn install -DcreateChecksum=true source:jar javadoc:jar -e
            cp ./.circleci/settings.xml ~/.m2 
            mvn -DskipTests deploy
            mvn dockerfile:build dockerfile:push
#            docker-compose pull couchtest
#            docker-compose up -d couchtest
#            sleep 10
#            docker-compose logs couchtest
      - add_ssh_keys:
          fingerprints:
            - "32:e4:94:57:e8:e3:04:a1:65:a7:a7:49:a7:e2:e8:56"

  push-test-db:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: push
          command: |
            docker login -e $DOCKER_EMAIL -e $DOCKER_PWD $DOCKER_USR
            docker-compose build couchtest
            docker-compose up -d couchtest
            sleep 10
            docker-compose logs couchtest
            docker-compose push couchtest

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - push-test-db
      - build:
          requires:
            - push-test-db
          filters:
            branches:
              only: features/circleci
