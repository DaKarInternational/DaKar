type Query {
    allJourney: [Journey!]
    findJourneyById(id: String!): Journey
    searchJourney(criteria: JourneyCriteriaInput): [Journey]
}

input JourneyCriteriaInput {
    destination: StringFilterCriteriaInput
    price: StringFilterCriteriaInput
}

input StringFilterCriteriaInput {
    contains: String
}

input JourneyInput {
    destination: String!
    price: String
    owner: String
}

type Journey {
    id: ID
    destination: String!
    price: String
    owner: String
}

type Mutation {
  createJourney(input: JourneyInput): Journey
  deleteJourney(id: ID): ID
}

type Subscription {
    stockQuotes(stockCodes:Int) : String!
}

schema{
    query: Query
    mutation: Mutation
    subscription: Subscription
}